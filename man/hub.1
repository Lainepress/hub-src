.\" ** You probably do not want to edit this file directly **
.\" It was generated using the DocBook XSL Stylesheets (version 1.69.1).
.\" Instead of manually editing it, you probably should edit the DocBook XML
.\" source for it and then use the DocBook XSL Stylesheets to regenerate it.
.TH "HUB" "1" "12/13/2011" "\ " "\ "
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.SH "NAME"
hub \- manage Haskell hubs (for selecting toolchains, libraries and sandboxes)
.SH "SYNOPSIS"
.sp
.nf
    hub usage
    hub help    [<hub\-command>]
    hub version
    hub default [<g\-hub>|\-]
    hub ls
    hub set     [<hub>|\-]
    hub info    [<hub>]
    hub name
    hub path    [<hub>]
    hub xml     [<hub>]
    hub init    [<hub>]   <u\-hub'>
    hub cp      [<u\-hub>] <u\-hub'>
    hub mv      [<u\-hub>] <u\-hub'>
    hub rm       <u\-hub>
    hub swap    [<u\-hub>] <u\-hub'>
.fi
.SH "DESCRIPTION"
Each of the installed Haskell toolkit commands vector through the hub wrapper for selecting the apropropriate compiler tools and libraries (i.e., package database). The hub command is used to manage and configure the named \fIhubs\fR that select the versions of the tools and libraries to use. These hubs can be used as flexible, lightweight development sandboxes.
.sp
Each hub is named. If the name starts with a numeric digit then it is a global hub \(em being shared, imutable and preinstalled (with the system packagemanager). Otherwise it names a (private) user hub that can have packages installed into it.
.sp
Use \fIhub ls\fR to list the available hubs and \fIhub init\fR to create a new hub based on an existing hub \(em the new hub will inherit all of the global packages of the hub it is based on.
.sp
To mark a directory and its subdirectories for use with a hub use \fIhub set\fR. To invoke a toolkit command in the context of a particular hub set the HUB environment variable for the execution of the command. E.g.,
.sp
.sp
.nf
      HUB=2011.2.0.1 ghc\-pkg list
.fi
To copy, rename, remove and swap the contents of two hubs use \fIhub cp\fR, \fIhub mv\fR, \fIhub rm\fR and \fIhub swap\fR, respectively.
.sp
.SH "COMMANDS"
.TP
hub usage
Lists the syntax of all the hub commands.
.TP
hub help [<hub\-command>]
Lists the help for a command or all commands if none specified. See "hub usage" for a command\-syntax summary.
.TP
hub version
Lists the version information.
.TP
hub default [<g\-hub>|\-]
(Needs to be run as root.) If no arguments are given then this command lists the the default global hub for the system (i.e., the default global hub used to set up each user\(cqs
\fIhome\fR
hub). If a global hub <g\-hub> is specified then <g\-hub> will become the default global hub. If a
\fI\-\fR
is specified then any older default settings are discarded and the system default re\-established.
.TP
hub ls
Lists your user hubs and all of the global hubs.
.TP
hub set [<hub>|\-]
Sets the
\fIcurrent\fR
hub for a directory and its sub\-directories. The HUB environment variable can be set to a hub name to override this setting.
.TP
hub info [<hub>]
Lists the vital stats for the named or current hub. (See
\fIhub set\fR
on how to set the current hub.)
.TP
hub name
Lists the name of the current hub. (See
\fIhub set\fR
on how to set the current hub.)
.TP
hub path [<hub>]
Lists the path of the XML file defining the named or current hub. (See
\fIhub set\fR
on how to set the current hub.)
.TP
hub xml [<hub>]
Lists the contents of the XML file defining the named or current hub. (See
\fIhub set\fR
on how to set the current hub.)
.TP
hub init [<hub>] <u\-hub'>
Creates an empty user hub, <u\-hub'>. The new hub inherits the global hub of <hub> (or the current hub). (See
\fIhub set\fR
on how to set the current hub.)
.TP
hub cp [<u\-hub>] <u\-hub'>
Duplicates the user <u\-hub> (or the current hib) in <u\-hub'>. (See
\fIhub set\fR
on how to set the current hub.)
.TP
hub mv [<u\-hub>] <u\-hub'>
Renames user hub <u\-hub> (or the current hub) to <u\-hub'>. (See
\fIhub set\fR
on how to set the current hub.)
.TP
hub rm <u\-hub>
Deletes user hub <hub>.
.TP
hub swap [<u\-hub>] <u\-hub'>
Swaps the contents of user hub <u\-hub> (or the current hub) with user hub <u\-hub'>.
.SH "EXAMPLE 1"
List the packages in the (installed) 2011.2.0.1 Haskell Platform:
.sp
.sp
.nf
     HUB=2011.2.0.1 ghc\-pkg list
.fi
.SH "EXAMPLE 2"
Create a new user hub foo based on 2011.4.0.0 platform, attach it to the current directory, and install the latest edition of hexpat into it.
.sp
.sp
.nf
     hub init 2011.4.0.0 foo
     hub set foo
     cabal install hexpat
.fi
.SH "EXAMPLE 3"
Duplicates the 2010.4.0.0\-based foo hub of example 2 into hub bar and installs the SHA package into it. foo wil now contain the 2010.4.0.0 packages plus hexpat and any other packages it needs and bar will contain all this plus package SHA plus any additional packages it need.
.sp
.sp
.nf
     hub cp foo bar
     HUB=bar cabal install SHA
.fi
.SH "EXAMPLE 4"
Unpacks GLUT\-2.2.2.1 and runs one of its example programs using the (installed) Haskell Platform 2011.2.0.1.
.sp
.sp
.nf
     cabal unpack GLUT\-2.2.2.1
     HUB=2011.2.0.1 runhaskell GLUT\-2.2.2.1/examples/BOGLGP/Chapter01/Simple.hs
.fi
.SH "ENVIRONMENT VARIABLES"
.TP
HUB
This environment variable determines the hub that the hub wrapper will use while invoking a compiler tool. If it is not set then the .hub file (set by
hub set) in the current directory or one its parent directories is used to determine the
\fIcurrent\fR
hub. If no parent directory defines the current hub then the default global hub is used (see the
hub default
command). The
HUB
environment variable overrides all of these so it is best left unset unless you really want to force a single hub to be used for the current session regardless of current directory.
.SH "FILES"
.TP
[dot]hub
(A bug in docbook aparently forbids literals from starting with a period.) Lists the name of the hub for the current directory and it\(cqs subdirectories.
.TP
~/.hubrc/hub/<u\-hub>.xml
Contains the hub\-spefification file for user hub <u\-hub>.
.TP
~/.hubrc/lib/<u\-hub>/package.config
Contains the package database for user hub <u\-hub>.
.TP
/usr/hs/bin
Haskell tools ~\-\- this directory should be put on the user path if the tools aren\(cqt installed in /usr/bin.
.TP
/usr/hs/hub/<g\-hub>.xml
XML configuration file for global hub <g\-hub>.
.TP
/usr/hs/db
Package databases for system hubs.
.TP
/usr/hs/ghc/<version>
Installation directory for GHC <version>.
.TP
/usr/hs/hp/<version>
Installation directory for Haskell Platform <version>.
.SH "SEE ALSO"
.TP
hub(5)
Describes the format of the XML configuration files used to represent the user and global hubs.
.TP
[1]\&\fIhttp://justhub.org\fR
The home page of the JustHub distribution contains introductory material and links to wikis and articles.
.SH "BUGS"
The Hub issue tracker is at [2]\&\fIhttps://github.com/justhub/hub\-gen/issues\fR.
.sp
.SH "AUTHOR"
Chris Dornan <[3]\&\fIchris@chrisdornan.com\fR>
.sp
.SH "REFERENCES"
.TP 3
1.\ http://justhub.org
\%http://justhub.org
.TP 3
2.\ https://github.com/justhub/hub\-gen/issues
\%https://github.com/justhub/hub\-gen/issues
.TP 3
3.\ chris@chrisdornan.com
\%mailto:chris@chrisdornan.com
